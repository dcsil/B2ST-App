#!/usr/bin/env bash

# Exit immediately if any subcommand fails
set -e

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

docker -v

command -v "docker" > /dev/null 2>&1 || {
  if [$(uname -s) = 'Darwin']; then
    # Install Homebrew
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

    brew update

    # Install dependencies from Brewfile
    cd "$DIR/.."
    pwd

    brew bundle check >/dev/null 2>&1  || {
        echo "==> Installing Homebrew dependenciesâ€¦"
        brew bundle
    }
  else
    sh "$DIR/install-docker.sh"
  fi
}

# React js dependencies
cd "$DIR/../client"
echo "==> Installing client dependencies"
npm install
echo "==> Client dependencies installed"

# Copy env variables if env file does not exist
echo "==> Updating client .env variables"
if [[ ! -f .env]]; then
  cp -r .env.example .env
fi
echo "==> Client .env variables updated"

# Node js dependencies
cd "$DIR/../server"
echo "==> Installing server dependencies"
npm install
echo "==> Server dependencies installed"

# Copy env variables if env file does not exist
echo "==> Updating server .env variables"
if [[ ! -f .env]]; then
  cp -r .env.example .env
fi
echo "==> Server .env variables updated"
cd "$DIR/.."
pwd 
echo "==> Docker Compose"
docker-compose up -d --build